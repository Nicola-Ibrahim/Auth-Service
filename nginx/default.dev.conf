server {
    listen 80;  # Listen on port 80 for incoming HTTP requests
    server_name example.com;  # Set your domain name or use _ for default

    # Security headers to enhance web application security
    add_header X-Frame-Options DENY;  # Prevent clickjacking by disallowing framing
    add_header X-Content-Type-Options nosniff;  # Prevent MIME-type sniffing
    add_header X-XSS-Protection "1; mode=block";  # Enable XSS protection
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";  # Enforce HTTPS for future requests

    # WebSocket configuration for handling real-time communication
    location /v1/ws {
        proxy_pass http://app:8000;  # Forward WebSocket connections to the app service
        proxy_http_version 1.1;  # Use HTTP/1.1 to support WebSocket upgrade
        proxy_set_header Upgrade $http_upgrade;  # Set the Upgrade header for WebSocket connections
        proxy_set_header Connection "upgrade";  # Required to establish WebSocket connections
        proxy_set_header Host $host;  # Preserve the original Host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the client's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward client IP information
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original request scheme (http/https)
    }

    # Reverse proxy configuration for the FastAPI application
    location / {
        proxy_pass http://app:8000;  # Forward requests to the FastAPI app
        proxy_set_header Host $host;  # Preserve the original Host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward the client's real IP address
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward client IP information
        proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original request scheme (http/https)

        # Timeout settings for better handling of slow responses
        proxy_connect_timeout 60s;  # Timeout for establishing a connection to the proxied server
        proxy_read_timeout 60s;  # Timeout for reading response from the proxied server
        proxy_send_timeout 60s;  # Timeout for sending requests to the proxied server
        send_timeout 60s;  # Timeout for sending responses to the client

        # Buffering and caching settings for performance improvements
        proxy_buffering on;  # Enable response buffering
        proxy_buffers 16 16k;  # Set the number and size of buffers
        proxy_buffer_size 32k;  # Set the size of the buffer for the first part of the response
        proxy_cache_bypass $http_upgrade;  # Bypass cache for WebSocket upgrade requests
    }

    # Enable Gzip compression for performance improvements
    gzip on;  # Enable Gzip compression
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;  # Specify types of files to compress
    gzip_proxied any;  # Enable compression for proxied requests
    gzip_vary on;  # Enable Vary header for cache control
    gzip_min_length 1024;  # Minimum length of a response to compress
    gzip_disable "msie6";  # Disable Gzip for very old browsers

    # Custom error page handling
    error_page 500 502 503 504 /50x.html;  # Specify custom error page for server errors
    location = /50x.html {
        root /usr/share/nginx/html;  # Root directory for the error page
    }

    # Log file settings for monitoring access and errors
    access_log /var/log/nginx/access.log;  # Access log file path
    error_log /var/log/nginx/error.log;  # Error log file path
  }
