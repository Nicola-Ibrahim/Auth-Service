[tool.poetry]
name = "fast-api"
version = "0.1.0"
description = "FastAPI application"
authors = ["Nicola Ibrahim <nicolaibrahim969@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "src" }]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
python-dotenv = "^0.21.1"
fastapi = { extras = ["all"], version = "^0.115.0" }
uvicorn = { extras = ["standard"], version = "^0.29.0" }
httpx = "^0.24.0"
pydantic = "^2.1.0"
fastapi-cli = "^0.0.5"
websockets = "^13.1"

# Create a new group for testing dependencies
sqlalchemy = "^2.0.35"
dependency-injector = "^4.43.0"
returns = "^0.24.0"
[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.1.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pylint = "^2.15.0"
colorlog = "^6.7.0"
pre-commit = "^3.0.4"
pytest-xdist = "^3.6.1"

# ==== black ====
[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
    | migrations/
)/
'''

# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 5
skip = [".venv/", "venv/"]
skip_glob = ["**/migrations/*.py"]

# ==== pylint ====
[tool.pylint.MASTER]
load-plugins = [""]

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-docstring", # Disable docstring warning for brevity
    "invalid-name",      # Disable naming convention warnings
]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

# ==== mypy ====
[tool.mypy]
python_version = "3.12"
files = [
    "src/",
    "tests/",
] # Specify the source and test directories for type checking
ignore_missing_imports = true
strict = true # Enables strict type checking

# ==== flake8 ====
[tool.flake8]
ignore = [
    "C101",
    "D403",
    "F403",
    "F401",
    "F405",
    "I100",
    "I201",
    "W503",
    "W504",
    "F821",
    "Q000",
    "E501",
    "A001",
    "A003",
    "T201",
    "I101",
    "A002",
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    ".tox",
    "*/migrations/*",
    "*/static/CACHE/*",
    "docs",
    "node_modules",
    "venv",
    ".script-venv",
]
filename = "*.py"
accept-encodings = "utf-8"
inline-quotes = "single"
max-complexity = 12
max-linenumber = 500
max-line-length = 119
multiline-quotes = "double"

# ==== pytest ====
[tool.pytest.ini_options]
addopts = "-v --tb=short"
testpaths = ["src"]
pythonpath = ["src"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = "ignore::DeprecationWarning:^(?!node\\.).*:"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
